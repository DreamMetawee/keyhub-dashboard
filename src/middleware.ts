// Backend Project: src/middleware.ts

import { NextResponse, type NextRequest } from 'next/server';

// üí° ‡∏Å‡∏≥‡∏´‡∏ô‡∏î Origin ‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡πÉ‡∏´‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á API ‡πÑ‡∏î‡πâ
const allowedOrigins = [
  'http://localhost:3001', // Frontend Development Port ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì
  'http://localhost:3002', 
  // ‡πÉ‡∏™‡πà Domain ‡∏à‡∏£‡∏¥‡∏á‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏°‡∏∑‡πà‡∏≠ Deploy ‡πÄ‡∏ä‡πà‡∏ô 'https://keyhub.com'
];

export function middleware(request: NextRequest) {
  const response = NextResponse.next();
  const origin = request.headers.get('origin') ?? '';

  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ Origin ‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
  if (allowedOrigins.includes(origin)) {
    // üì¢ ‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç: ‡πÄ‡∏û‡∏¥‡πà‡∏° Header ‡∏ô‡∏µ‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡πÉ‡∏ô‡∏ó‡∏∏‡∏Å Response
    response.headers.set('Access-Control-Allow-Origin', origin);
  }

  // ‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ Methods ‡πÅ‡∏•‡∏∞ Headers ‡∏°‡∏≤‡∏ï‡∏£‡∏ê‡∏≤‡∏ô
  response.headers.set('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE, OPTIONS');
  response.headers.set('Access-Control-Allow-Headers', 'Content-Type, Authorization');
  response.headers.set('Access-Control-Allow-Credentials', 'true');


  // ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ Preflight Request (OPTIONS Method)
  // Browser ‡∏à‡∏∞‡∏™‡πà‡∏á OPTIONS ‡∏°‡∏≤‡∏Å‡πà‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏Å POST, PUT, DELETE ‡∏à‡∏£‡∏¥‡∏á
  if (request.method === 'OPTIONS') {
    return NextResponse.json({}, { status: 200, headers: response.headers });
  }

  return response;
}

// ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏ß‡πà‡∏≤ Middleware ‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏Å‡∏±‡∏ö API Routes
export const config = {
  matcher: '/api/:path*',
};